name: Continoues Integration (Forum API)

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    services:
      pg_forumapi:
        image: prasetyaip/ems-postgresql:v1
        env:
          POSTGRES_USER: ${{ secrets.PGUSER }}
          POSTGRES_PASSWORD: ${{ secrets.PGPASSWORD }}
          POSTGRES_DB: ${{ secrets.PGDATABASE }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      pg_forumapi_test:
        image: prasetyaip/ems-postgresql:v1
        env:
          POSTGRES_USER: ${{ secrets.PGUSER_TEST }}
          POSTGRES_PASSWORD: ${{ secrets.PGPASSWORD_TEST }}
          POSTGRES_DB: ${{ secrets.PGDATABASE_TEST }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5433:5432

    steps:
      - name: Checkout code from repository
        uses: actions/checkout@v3
      - name: Check docker run
        run: |
          docker -v
          docker ps
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: npm install migrate and test
        run: |
          npm install
          npm run migrate up
          npm run test
        env:
          CI: true
          PGHOST_TEST: ${{ secrets.PGHOST_TEST }}
          PGUSER_TEST: ${{ secrets.PGUSER_TEST }}
          PGDATABASE_TEST: ${{ secrets.PGDATABASE_TEST }}
          PGPASSWORD_TEST: ${{ secrets.PGPASSWORD_TEST }}
          PGPORT_TEST: ${{ secrets.PGPORT_TEST }}
          PGHOST: ${{ secrets.PGHOST }}
          PGUSER: ${{ secrets.PGUSER }}
          PGDATABASE: ${{ secrets.PGDATABASE }}
          PGPASSWORD: ${{ secrets.PGPASSWORD }}
          PGPORT: ${{ secrets.PGPORT }}
          ACCESS_TOKEN_KEY: ${{ secrets.ACCESS_TOKEN_KEY }}
          REFRESH_TOKEN_KEY: ${{ secrets.REFRESH_TOKEN_KEY }}
          ACCESS_TOKEN_AGE: ${{ secrets.ACCESS_TOKEN_AGE }}
